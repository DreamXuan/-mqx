<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.exam.mapper.StudentpaperMapper" >
  <resultMap id="BaseResultMap" type="com.exam.pojo.Studentpaper" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="spid" property="spid" jdbcType="VARCHAR" />
    <result column="USERID" property="userid" jdbcType="INTEGER" />
    <result column="sid" property="sid" jdbcType="INTEGER" />
    <result column="studentkey" property="studentkey" jdbcType="VARCHAR" />
    <result column="studentstate" property="studentstate" jdbcType="INTEGER" />
    <result column="pname" property="pname" jdbcType="VARCHAR" />
    <result column="rightcount" property="rightcount" jdbcType="INTEGER" />
    <result column="errorcount" property="errorcount" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="MyMap" type="com.exam.pojo.Studentpaper">
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="rightcount" property="rightcount" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, spid, USERID, sid, studentkey, studentstate, pname
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.exam.pojo.StudentpaperExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from studentpaper
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from studentpaper
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from studentpaper
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.exam.pojo.StudentpaperExample" >
    delete from studentpaper
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.exam.pojo.Studentpaper" >
    insert into studentpaper (id, spid, USERID, 
      sid, studentkey, studentstate, 
      pname)
    values (#{id,jdbcType=INTEGER}, #{spid,jdbcType=VARCHAR}, #{userid,jdbcType=INTEGER}, 
      #{sid,jdbcType=INTEGER}, #{studentkey,jdbcType=VARCHAR}, #{studentstate,jdbcType=INTEGER}, 
      #{pname,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.exam.pojo.Studentpaper" >
    insert into studentpaper
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="spid != null" >
        spid,
      </if>
      <if test="userid != null" >
        USERID,
      </if>
      <if test="sid != null" >
        sid,
      </if>
      <if test="studentkey != null" >
        studentkey,
      </if>
      <if test="studentstate != null" >
        studentstate,
      </if>
      <if test="pname != null" >
        pname,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="spid != null" >
        #{spid,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="sid != null" >
        #{sid,jdbcType=INTEGER},
      </if>
      <if test="studentkey != null" >
        #{studentkey,jdbcType=VARCHAR},
      </if>
      <if test="studentstate != null" >
        #{studentstate,jdbcType=INTEGER},
      </if>
      <if test="pname != null" >
        #{pname,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.exam.pojo.StudentpaperExample" resultType="java.lang.Integer" >
    select count(*) from studentpaper
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update studentpaper
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.spid != null" >
        spid = #{record.spid,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null" >
        USERID = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.sid != null" >
        sid = #{record.sid,jdbcType=INTEGER},
      </if>
      <if test="record.studentkey != null" >
        studentkey = #{record.studentkey,jdbcType=VARCHAR},
      </if>
      <if test="record.studentstate != null" >
        studentstate = #{record.studentstate,jdbcType=INTEGER},
      </if>
      <if test="record.pname != null" >
        pname = #{record.pname,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update studentpaper
    set id = #{record.id,jdbcType=INTEGER},
      spid = #{record.spid,jdbcType=VARCHAR},
      USERID = #{record.userid,jdbcType=INTEGER},
      sid = #{record.sid,jdbcType=INTEGER},
      studentkey = #{record.studentkey,jdbcType=VARCHAR},
      studentstate = #{record.studentstate,jdbcType=INTEGER},
      pname = #{record.pname,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.exam.pojo.Studentpaper" >
    update studentpaper
    <set >
      <if test="spid != null" >
        spid = #{spid,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        USERID = #{userid,jdbcType=INTEGER},
      </if>
      <if test="sid != null" >
        sid = #{sid,jdbcType=INTEGER},
      </if>
      <if test="studentkey != null" >
        studentkey = #{studentkey,jdbcType=VARCHAR},
      </if>
      <if test="studentstate != null" >
        studentstate = #{studentstate,jdbcType=INTEGER},
      </if>
      <if test="pname != null" >
        pname = #{pname,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.exam.pojo.Studentpaper" >
    update studentpaper
    set spid = #{spid,jdbcType=VARCHAR},
      USERID = #{userid,jdbcType=INTEGER},
      sid = #{sid,jdbcType=INTEGER},
      studentkey = #{studentkey,jdbcType=VARCHAR},
      studentstate = #{studentstate,jdbcType=INTEGER},
      pname = #{pname,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="StudentPaperList" parameterType="java.lang.Integer" resultMap="BaseResultMap">
   SELECT spid,userid,pname,
   count(if(studentstate=1,true,null)) AS rightcount,
   count(if(studentstate=0,true,null)) AS errorcount
   FROM studentpaper where USERID =#{userid,jdbcType=INTEGER}  GROUP BY spid desc
  </select>

  <select id="listByRightcount" resultMap="MyMap">
    SELECT COUNT(*) rightcount FROM studentpaper
    where studentstate=1 AND studentpaper.USERID = #{userid,jdbcType=INTEGER} AND spid = #{spid,jdbcType=VARCHAR}
  </select>
</mapper>